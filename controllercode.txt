// below are the code of controller//

package EmployeeRestController;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import Employee.Service.EmployeeService;
import Employeecrud.entity.Employee;

@RestController
@RequestMapping("/api")
public class EmployeeRestController {

private EmployeeService employeeservice;



@Autowired
public EmployeeRestController(EmployeeService theEmployeeService)	{
	employeeservice= theEmployeeService;
}
	


@GetMapping("/employees")
public List<Employee> getall(){
	
	return employeeservice.getall();
}




@GetMapping("/employees/{employeeId}")
public Employee getEmployee(@PathVariable int employeeId) {
	
	Employee theEmployee = employeeservice.GetById(employeeId);
	
	if (theEmployee == null) {
		throw new RuntimeException("Employee id not found - " + employeeId);
	}
	
	return theEmployee;
}



@PostMapping("/employees")
public Employee addEmployee(@RequestBody Employee theEmployee) {
	
	// also just in case they pass an id in JSON ... set id to 0
	// this is to force a save of new item ... instead of update
	
	theEmployee.setId(0);
	
	employeeservice.Save(theEmployee);
	
	return theEmployee;
}



@PutMapping("/employees")
public Employee updateEmployee(@RequestBody Employee theEmployee) {
	
	employeeservice.Save(theEmployee);
	
	return theEmployee;
}



@DeleteMapping("/employees/{employeeId}")
public String deleteEmployee(@PathVariable int employeeId) {
	
	Employee tempEmployee = employeeservice.GetById(employeeId);
	
	// throw exception if null
	
	if (tempEmployee == null) {
		throw new RuntimeException("Employee id not found - " + employeeId);
	}
	
	employeeservice.DeleteById(employeeId);
	
	return "Deleted employee id - " + employeeId;
}


}


